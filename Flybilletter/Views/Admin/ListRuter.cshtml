@model IEnumerable<Flybilletter.Model.DomeneModel.Rute>

@{
    ViewBag.Title = "Ruter";
}

<h2>Ruter</h2>

<p>
    @Html.ActionLink("Lag ny rute", "LagRute", new { }, new { @class = "btn btn-primary" })
</p>

<div id="ruter">
    <div class="input-group">
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="fraID" style="margin-right: 0.5em;">
                Sorter etter fra flyplass
            </button>
        </span>
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="tilID" style="margin-right: 0.5em;">
                Sorter etter til flyplass
            </button>
        </span>
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="pris" style="margin-right: 0.5em;">
                Sorter etter pris
            </button>
        </span>
        <input class="sokListe form-control input-sm col-sm-3" placeholder="Søk" />
    </div>



    <table class="table">
        <thead>
            <tr>
                <th colspan="2">
                    Fra flyplass
                </th>
                <th colspan="2">
                    Til flyplass
                </th>
                <th>
                    Pris
                </th>
                <th></th>
            </tr>
        </thead>


        <tbody class="list">
            @foreach (var item in Model)
            {
                <tr>
                    <td class="fraID">
                        <div class="displayRute">@item.Fra.ID</div>
                        @Html.EditorFor(modelItem => item.Fra.ID, new { htmlAttributes = new { @class = "hidden editRute input-xs", disabled = "" } })
                    </td>
                    <td class="fraInfo">
                        @item.Fra.Navn - @item.Fra.By, @item.Fra.Land
                    </td>
                    <td class="tilID">
                        <div class="displayRute">@item.Til.ID</div>
                        @Html.EditorFor(modelItem => item.Til.ID, new { htmlAttributes = new { @class = "hidden editRute input-xs", disabled = "" } })
                    </td>
                    <td class="tilInfo">
                        <div >@item.Til.Navn  - @item.Til.By, @item.Til.Land</div>
                    </td>
                    <td class="pris">
                        <div class="displayRute">@Html.DisplayFor(modelItem => item.BasePris)</div>
                        @Html.EditorFor(modelItem => item.BasePris, new { htmlAttributes = new { @class = "hidden editRute input-xs", disabled = "" } })
                    </td>
                    <td>
                        @Html.ActionLink("Endre", "EndreRute", new { id = item.ID }, new { @class = "endreKnapp btn btn-default", data_status = "endre" })
                        @Html.ActionLink("Lagre", "LagreRute", new { id = item.ID }, new { @class = "lagreKnapp btn btn-default disabled" })
                        @Html.ActionLink("Slett", "SlettRute", new { id = item.ID }, new { @class = "slettKnapp btn btn-danger" })
                    </td>
                </tr>
            }
        </tbody>

    </table>

</div>

@Html.Partial("_SlettElementModal")

<script>
    $(function () {
        $(".endreKnapp").click(function (event) {
            event.preventDefault();

            //Vis input.bokser
            $(this).parents("tr").find(".editRute").toggleClass("hidden").removeAttr("disabled");
            //Gjem display-values
            $(this).parents("tr").find(".displayRute").toggleClass("hidden");
            //Aktiver knapp
            $(this).siblings(".lagreKnapp").toggleClass("disabled").toggleClass("btn-success").toggleClass("btn-default");

            if ($(this).data("status") === "endre") {
                $(this).text("Avbryt");
                $(this).data("status", "avbryt");
            } else {
                $(this).text("Endre");
                $(this).data("status" , "endre");
            }


        });

        var options = {
            valueNames: ['fraID', 'fraInfo' , 'tilID', 'tilInfo', 'pris'],
            searchClass: "sokListe",
            sortClass: "sortListe"
        };

        var userList = new List('ruter', options);
    });

</script>

