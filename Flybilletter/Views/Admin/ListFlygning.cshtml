@model IEnumerable<Flybilletter.Model.DomeneModel.Flygning>

@{
    ViewBag.Title = "Flygninger";
    var jsSerializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    string jsonFlygninger = jsSerializer.Serialize(Model);
}

<h2>Flygninger</h2>

<p>
    @Html.ActionLink("Lag ny flygning", "LagFlygning", new { }, new { @class = "btn btn-primary" })
</p>

<div id="flygninger table-responsive">

    <div class="input-group">
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="fraID" style="margin-right: 0.5em;">
                Sorter etter fra flyplass
            </button>
        </span>
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="tilID" style="margin-right: 0.5em;">
                Sorter etter til flyplass
            </button>
        </span>
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="avgang" style="margin-right: 0.5em;">
                Sorter etter avgangstid
            </button>
        </span>
        <span class="input-group-btn">
            <button class="sortListe btn btn-sm btn-info" data-sort="ankomst" style="margin-right: 0.5em;">
                Sorter etter ankomsttid
            </button>
        </span>
        <input class="sokListe form-control input-sm col-sm-3" placeholder="Søk" />
    </div>

    <table class="table">
        <thead>
            <tr>
                <th colspan="2">
                    Fra flyplass
                </th>
                <th colspan="2">
                    Til flyplass
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fly.Modell)
                </th>
                <th>
                    Avgangstid
                </th>
                <th>
                    Ankomsttid
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody class="list">
            @foreach (var item in Model)
            {
                <tr>
                    <input class="editRute hidden" data-val="true" data-val-number="The field ID must be a number." data-val-required="Feltet ID er obligatorisk." id="id" name="id" type="hidden" value="52">
                    <td class="fraID">
                        @item.Rute.Fra.ID
                    </td>
                    <td class="fra">
                        @item.Rute.Fra.Navn - @item.Rute.Fra.By, @item.Rute.Fra.Land
                    </td>
                    <td class="tilID">
                        @item.Rute.Til.ID
                    </td>
                    <td class="til">
                        @item.Rute.Til.Navn - @item.Rute.Til.By, @item.Rute.Til.Land
                    </td>
                    <td class="fly">
                        @Html.DisplayFor(modelItem => item.Fly.Modell)
                    </td>
                    <td class="avgang">
                        <div class="displayRute">  @Html.DisplayFor(modelItem => item.AvgangsTid)</div>
                        <input class="form-control editRute input-xs hidden text-box single-line" data-val="true" data-val-date="The field AvgangsTid must be a date." data-val-required="Feltet AvgangsTid er obligatorisk." id="nyAvgangstid" name="nyAvgangstid" style="max-width: 195px;" type="datetime-local" value="@item.AvgangsTid">
                    </td>
                    <td class="ankomst">
                        @Html.DisplayFor(modelItem => item.AnkomstTid)
                    </td>
                    <td>
                        @Html.ActionLink("Endre", "EndreFlygning", new { id = item.ID }, new { @class = "endreKnapp btn btn-default", data_status = "endre" })
                        @Html.ActionLink("Lagre", "LagreKunde", new { id = item.ID }, new { @class = "lagreKnapp btn btn-default disabled" })

                        @if (DateTime.Now < item.AvgangsTid && item.Kansellert == false)
                        {
                            @Html.ActionLink("Kanseller", "OppdaterStatusFlygning", new { id = item.ID }, new { @class = "slettKnapp btn btn-danger", data_val = "kansellere", data_tittel = "Kanseller" })
                        }
                        else if (DateTime.Now < item.AvgangsTid && item.Kansellert == true)
                        {
                            @Html.ActionLink("Aktiver", "OppdaterStatusFlygning", new { id = item.ID }, new { @class = "slettKnapp btn btn-success", data_val = "aktivere", data_tittel = "Aktiver" })
                        }
                        else
                        {
                            if (item.Kansellert == true)
                            {
                                <a href="#" class="btn btn-default" title="Flyet har allerede hatt avgang, kan derfor ikke aktiveres" data-toggle="tooltip">Aktiver</a>
                            }
                            else
                            {
                                <a href="#" class="btn btn-default" title="Flyet har allerede hatt avgang, kan derfor ikke kansellere" data-toggle="tooltip">Kanseller</a>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Count() >= 8)
            {
    <p>
        @Html.ActionLink("Lag ny flygning", "LagFlygning", new { }, new { @class = "btn btn-primary" })
    </p>
}

<!--TODO: fiks dette til å bli dynamisk i forhold til hva som trykkes (Kanseller/Aktiver)-->
<div class="modal" id="sikkersletting" role="dialog">

    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalEditAktiver"></h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Er du sikker på at du vil <span id="endreType"></span> flygningen?</label>
                    <button type="submit" id="slette" class="btn btn-success" value="true">Ja</button>
                    <button type="submit" id="ikkeslett" class="btn btn-danger" value="false">Nei</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $(".slettKnapp").click(function (event) {
            event.preventDefault();
            var that = $(this);

            $("#modalEditAktiver").html(that.data("tittel"));
            $("#endreType").html(that.data("val"));
            $("#sikkersletting").modal("show");

            $("#slette").click(function (event2) {
                window.location.href = that.attr("href");
            });
        });

        $("#ikkeslett").click(function (event) {
            $("#sikkersletting").modal("hide");

        });

        $(".endreKnapp").click(function (event) {
            event.preventDefault();

            //Vis input.bokser
            $(this).parents("tr").find(".editRute").toggleClass("hidden").removeAttr("disabled");
            //Gjem display-values
            $(this).parents("tr").find(".displayRute").toggleClass("hidden");
            //Aktiver knapp
            $(this).siblings(".lagreKnapp").toggleClass("disabled").toggleClass("btn-success").toggleClass("btn-default");

            if ($(this).data("status") === "endre") {
                $(this).text("Avbryt");
                $(this).data("status", "avbryt");
            } else {
                $(this).text("Endre");
                $(this).data("status", "endre");
            }
        });


        $(".lagreKnapp").click(function (event) {
            event.preventDefault();

            var formData = $(this).parents("tr").find(".editRute").serialize();

            $.ajax({
                url: "/Admin/EndreFlygning",
                method: "POST",
                data: formData,
            }).done(function (response) {
                if (response === "true") {
                    location.reload();
                } else {
                    alert(response);
                }
            });

        });

        //Data for list.js
        var options = {
            valueNames: ['fra', 'fraID', 'til', 'tilID', 'fly', 'avgang', 'ankomst'],
            searchClass: "sokListe",
            sortClass: "sortListe"
        };

        var userList = new List('flygninger', options);

    });

</script>

<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
